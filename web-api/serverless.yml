service: web-api

custom:
  #secrets: ${file(secrets.local.json)}
  secrets: ${file(secrets.json)}

provider:
  name: aws
  runtime: nodejs12.x
  timeout: 30
  stage: ${self:custom.secrets.NODE_ENV}
  lambdaHashingVersion: 20201221
  environment:
    NODE_ENV: ${self:custom.secrets.NODE_ENV}
    DB_NAME: ${self:custom.secrets.DB_NAME}
    DB_USER: ${self:custom.secrets.DB_USER}
    DB_PASSWORD: ${self:custom.secrets.DB_PASSWORD}
    DB_HOST: ${self:custom.secrets.DB_HOST}
    DB_PORT: ${self:custom.secrets.DB_PORT}
  vpc:
    securityGroupIds:
      - ${self:custom.secrets.SECURITY_GROUP_ID}
    subnetIds:
      - ${self:custom.secrets.SUBNET1_ID}
      - ${self:custom.secrets.SUBNET2_ID}
      - ${self:custom.secrets.SUBNET3_ID}
      - ${self:custom.secrets.SUBNET4_ID}
      - ${self:custom.secrets.SUBNET5_ID}
      - ${self:custom.secrets.SUBNET6_ID}
  eventBridge:
    useCloudFormation: true

functions:
  healthCheck:
    handler: handler.healthCheck
    events:
      - http:
          path: /
          method: get
          cors: true
  create:
    handler: handler.create
    events:
      - http:
          path: tickets
          method: post
          cors: true
  getOne:
    handler: handler.getOne
    events:
      - http:
          path: tickets/{id}
          method: get
          cors: true
  getAll:
    handler: handler.getAll
    events:
     - http:
         path: tickets
         method: get
         cors: true
  update:
    handler: handler.update
    events:
     - http:
         path: tickets/{id}
         method: put
         cors: true
  destroy:
    handler: handler.destroy
    events:
     - http:
         path: tickets/{id}
         method: delete
         cors: true
  createEventBridgeLog:
    handler: handler.createEventBridgeLog
    events:
      - eventBridge:
          pattern:
            source: 
              - aws.rds
            detail-type:
              - RDS DB Cluster Event
          retryPolicy:
            maximumEventAge: 3600
            maximumRetryAttempts: 10
  getAllEventBridgeLog:
    handler: handler.getAllEventBridgeLog
    events:
     - http:
         path: logs
         method: get
         cors: true

plugins:
  - serverless-offline